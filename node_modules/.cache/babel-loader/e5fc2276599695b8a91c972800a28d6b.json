{"ast":null,"code":"var _jsxFileName = \"/Users/amnahabdulal/Desktop/websites/edx/public-repos/src/App.js\";\nimport React from 'react';\nimport './Loading';\nimport './App.css';\nimport Loading from './Loading';\n\nfunction LangList(props) {\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props.list.map(lang => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"App-link\",\n    onClick: () => props.onhandleSelectedLanguage(lang),\n    key: lang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, \" \", lang))));\n}\n\nfunction Results(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.items.map(e => /*#__PURE__*/React.createElement(\"li\", {\n    key: e.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \" \", e.full_name, \"  \"))));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: ['All', 'Paython', 'Javascript', 'Ruby'],\n      activeLanguage: 'all',\n      loading: false,\n      results: []\n    };\n    this.fetchPopularRepos = this.fetchPopularRepos.bind(this);\n    this.handleSelectedLanguage = this.handleSelectedLanguage.bind(this);\n  }\n\n  handleSelectedLanguage(lang) {\n    this.setState({\n      activeLanguage: lang\n    });\n  }\n\n  fetchPopularRepos(language) {\n    // \"language\" can be \"javascript\", \"ruby\", \"python\", or \"all\"\n    const encodedURI = encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`);\n    this.setState({\n      loading: true\n    });\n    return fetch(encodedURI).then(data => data.json()).then(repos => {\n      console.log(repos.items);\n      this.setState({\n        results: repos.items,\n        loading: false\n      });\n    }).catch(error => {\n      console.warn(error);\n      return null;\n    });\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LangList, {\n      list: this.state.list,\n      onHandleSelectedLanguage: this.handleSelectedLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \" Active language: \", this.state.activeLanguage), /*#__PURE__*/React.createElement(Results, {\n      items: this.state.results,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amnahabdulal/Desktop/websites/edx/public-repos/src/App.js"],"names":["React","Loading","LangList","props","list","map","lang","onhandleSelectedLanguage","Results","items","e","id","full_name","App","Component","constructor","state","activeLanguage","loading","results","fetchPopularRepos","bind","handleSelectedLanguage","setState","language","encodedURI","encodeURI","fetch","then","data","json","repos","console","log","catch","error","warn","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Loading'\nimport './App.css';\nimport Loading from './Loading';\n\n\nfunction LangList(props) {\n  return (\n    <nav>\n      <ul>\n        {props.list.map((lang) =>\n          <li className ='App-link'\n            onClick={() => props.onhandleSelectedLanguage(lang)} key={lang} > {lang}\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\n\nfunction Results(props) {\n  return (\n    <div>\n      <ul>\n        {props.items.map((e) =>\n          <li  key={e.id} > {e.full_name}  </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: ['All','Paython', 'Javascript', 'Ruby'],\n      activeLanguage:'all',\n      loading: false,\n      results: []\n    }\n    this.fetchPopularRepos = this.fetchPopularRepos.bind(this)\n    this.handleSelectedLanguage = this.handleSelectedLanguage.bind(this)\n  }\n\n  handleSelectedLanguage(lang){\n   this.setState({\n     activeLanguage: lang\n   })\n  }\n\n  fetchPopularRepos(language) {\n    // \"language\" can be \"javascript\", \"ruby\", \"python\", or \"all\"\n    const encodedURI = encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`)\n    this.setState({\n      loading: true\n    })\n    return fetch(encodedURI)\n      .then((data) => data.json())\n      .then((repos) => {\n        console.log(repos.items)\n        this.setState({\n          results: repos.items,\n          loading: false\n        })\n      })\n      .catch((error) => {\n        console.warn(error)\n        return null\n      });\n  }\n\n\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div className=\"container\">\n          <Loading />\n        </div>\n      )\n    }\n    return (\n      <div className=\"container\">\n        <LangList list={this.state.list} onHandleSelectedLanguage={this.handleSelectedLanguage} />\n        <h1> Active language: {this.state.activeLanguage}</h1>\n        <Results items={this.state.results} />\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}