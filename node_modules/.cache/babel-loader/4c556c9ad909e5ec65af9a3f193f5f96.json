{"ast":null,"code":"var _jsxFileName = \"/Users/amnahabdulal/Desktop/websites/edx/public-repos/src/App.js\";\nimport React from 'react';\nimport './Loading';\nimport './App.css';\nimport Loading from './Loading';\n\nfunction LangList(props) {\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props.list.map(lang => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"App-link\",\n    onClick: () => props.onHandleSelectedLanguage(lang),\n    key: lang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, \" \", lang, \" \"))));\n}\n\nfunction Results(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, props.items.map(e => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"item-grid\",\n    key: e.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: e.html_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }\n  }, \" \", e.name, \" \")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \" @\", e.owner.login, \"  \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \" \", e.stargazers_count, \"  \"))))));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: ['All', 'Paython', 'Javascript', 'Ruby'],\n      activeLanguage: 'all',\n      loading: false,\n      results: []\n    };\n    this.fetchPopularRepos = this.fetchPopularRepos.bind(this);\n    this.handleSelectedLanguage = this.handleSelectedLanguage.bind(this);\n  }\n\n  handleSelectedLanguage(lang) {\n    this.setState({\n      activeLanguage: lang\n    });\n  }\n\n  fetchPopularRepos(language) {\n    // \"language\" can be \"javascript\", \"ruby\", \"python\", or \"all\"\n    const encodedURI = encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`);\n    this.setState({\n      loading: true\n    });\n    return fetch(encodedURI).then(data => data.json()).then(repos => {\n      console.log(repos.items);\n      this.setState({\n        results: repos.items,\n        loading: false\n      });\n    }).catch(error => {\n      console.warn(error);\n      return null;\n    });\n  }\n\n  componentDidMount() {\n    this.fetchPopularRepos(this.state.activeLanguage);\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LangList, {\n      list: this.state.list,\n      onHandleSelectedLanguage: this.handleSelectedLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), this.state.loading === true ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \" Active language: \", this.state.activeLanguage), /*#__PURE__*/React.createElement(Results, {\n      items: this.state.results,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amnahabdulal/Desktop/websites/edx/public-repos/src/App.js"],"names":["React","Loading","LangList","props","list","map","lang","onHandleSelectedLanguage","Results","items","e","id","html_url","name","owner","login","stargazers_count","App","Component","constructor","state","activeLanguage","loading","results","fetchPopularRepos","bind","handleSelectedLanguage","setState","language","encodedURI","encodeURI","fetch","then","data","json","repos","console","log","catch","error","warn","componentDidMount","componentDidUpdate","prevProps","prevState","render","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Loading'\nimport './App.css';\nimport Loading from './Loading';\n\n\nfunction LangList(props) {\n  return (\n    <nav>\n      <ul>\n        {props.list.map((lang) =>\n          <li \n            className ='App-link'\n            onClick={() => props.onHandleSelectedLanguage(lang)}\n            key={lang} > {lang} </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\n\nfunction Results(props) {\n  return (\n    <div>\n      <ul className=\"grid\">\n        {props.items.map((e) =>\n          <li className=\"item-grid\" key={e.id} > <ul>\n            <li> <a href={e.html_url}> {e.name} </a></li>\n            <li> @{e.owner.login}  </li>\n            <li> {e.stargazers_count}  </li> \n          </ul></li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: ['All','Paython', 'Javascript', 'Ruby'],\n      activeLanguage:'all',\n      loading: false,\n      results: []\n    }\n    this.fetchPopularRepos = this.fetchPopularRepos.bind(this)\n    this.handleSelectedLanguage = this.handleSelectedLanguage.bind(this)\n  }\n\n  handleSelectedLanguage(lang){\n   this.setState({\n     activeLanguage: lang\n   })\n  }\n\n  fetchPopularRepos(language) {\n    // \"language\" can be \"javascript\", \"ruby\", \"python\", or \"all\"\n    const encodedURI = encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`)\n    this.setState({\n      loading: true\n    })\n    return fetch(encodedURI)\n      .then((data) => data.json())\n      .then((repos) => {\n        console.log(repos.items)\n        this.setState({\n          results: repos.items,\n          loading: false\n        })\n      })\n      .catch((error) => {\n        console.warn(error)\n        return null\n      });\n  }\n\n  componentDidMount(){\n    this.fetchPopularRepos(this.state.activeLanguage)\n  }\n   \n  componentDidUpdate(prevProps, prevState){\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <LangList list={this.state.list} onHandleSelectedLanguage={this.handleSelectedLanguage} />\n        {this.state.loading === true \n        ? <Loading />\n        : <div>\n          <h1 style={{textAlign:'center'}}> Active language: {this.state.activeLanguage}</h1>\n          <Results items={this.state.results} />\n          </div>\n          }  \n      </div>\n    )\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}